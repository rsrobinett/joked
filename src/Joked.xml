<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Joked</name>
    </assembly>
    <members>
        <member name="M:Joked.Controllers.JokesController.GetJokes(System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Display curated list of jokes for a search term
            </summary>
            <remarks>
            Accept a search term and display the first 30 jokes containing that term,
            with the matching term emphasized in some way (upper, bold, color, etc.)
            and the matching jokes grouped by length: short  <![CDATA[ (<10 words), medium (<20 words), long (<= 20 words) ]]>
            https://icanhazdadjoke.com/api
            </remarks>
        </member>
        <member name="T:Joked.Handlers.IEmphasize">
            <summary>
            Adds Emphasis strings around the search term.
            </summary>
        </member>
        <member name="T:Joked.Handlers.SimpleEmphasis">
            <summary>
            Adds Emphasis strings around the search term.
            It finds the whole term in the string and replaces the whole term if it exists.
            If the string is multiple terms long, it replaces the string only when there is an exact match including whitespace for the search term.
            </summary>
        </member>
        <member name="T:Joked.Model.ICuratedJokes">
            <summary>
            List of jokes curated in to 3 groups short medium and long
            </summary>
        </member>
        <member name="P:Joked.Model.ICuratedJokes.Short">
            <summary>
            Short jokes <![CDATA[<10 words]]>
            </summary>
        </member>
        <member name="P:Joked.Model.ICuratedJokes.Medium">
            <summary>
            Medium Joke <![CDATA[<20 words ]]>
            </summary>
        </member>
        <member name="P:Joked.Model.ICuratedJokes.Long">
            <summary>
            Long jokes >= 20 words
            </summary>
        </member>
        <member name="T:Joked.Model.IJokes">
            <summary>
            Object received from the joke server 
            </summary>
        </member>
        <member name="P:Joked.Model.IJokes.Jokes">
            <summary>
            List of Jokes
            </summary>
        </member>
    </members>
</doc>
